"""Add question bank foundation with global questions and session questions

Revision ID: 7b15fd9db179
Revises: 84cb1aaf7a64
Create Date: 2025-10-14 08:49:51.393175

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7b15fd9db179'
down_revision: Union[str, None] = '84cb1aaf7a64'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('session_questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('question_order', sa.Integer(), nullable=False),
    sa.Column('session_specific_context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['interview_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_questions_order', 'session_questions', ['question_order'], unique=False)
    op.create_index('idx_session_questions_question_id', 'session_questions', ['question_id'], unique=False)
    op.create_index('idx_session_questions_session_id', 'session_questions', ['session_id'], unique=False)
    op.create_index(op.f('ix_session_questions_question_id'), 'session_questions', ['question_id'], unique=False)
    op.create_index(op.f('ix_session_questions_session_id'), 'session_questions', ['session_id'], unique=False)
    op.add_column('questions', sa.Column('question_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column('questions', sa.Column('subcategory', sa.String(length=100), nullable=True))
    op.add_column('questions', sa.Column('compatible_roles', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('questions', sa.Column('required_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('questions', sa.Column('industry_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('questions', sa.Column('usage_count', sa.Integer(), nullable=False))
    op.add_column('questions', sa.Column('average_score', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('success_rate', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('ai_service_used', sa.String(length=50), nullable=True))
    op.add_column('questions', sa.Column('generation_prompt_hash', sa.String(length=64), nullable=True))
    op.add_column('questions', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('questions', 'category',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_index('idx_questions_session_id', table_name='questions')
    op.drop_index('ix_questions_session_id', table_name='questions')
    op.create_index('idx_questions_category', 'questions', ['category'], unique=False)
    op.create_index('idx_questions_difficulty', 'questions', ['difficulty_level'], unique=False)
    op.create_index('idx_questions_subcategory', 'questions', ['subcategory'], unique=False)
    op.create_index('idx_questions_usage_count', 'questions', ['usage_count'], unique=False)
    op.create_index(op.f('ix_questions_category'), 'questions', ['category'], unique=False)
    op.create_index(op.f('ix_questions_difficulty_level'), 'questions', ['difficulty_level'], unique=False)
    op.create_index(op.f('ix_questions_subcategory'), 'questions', ['subcategory'], unique=False)
    op.drop_constraint('questions_session_id_fkey', 'questions', type_='foreignkey')
    op.drop_column('questions', 'question_order')
    op.drop_column('questions', 'session_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('questions', sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('questions', sa.Column('question_order', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('questions_session_id_fkey', 'questions', 'interview_sessions', ['session_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_questions_subcategory'), table_name='questions')
    op.drop_index(op.f('ix_questions_difficulty_level'), table_name='questions')
    op.drop_index(op.f('ix_questions_category'), table_name='questions')
    op.drop_index('idx_questions_usage_count', table_name='questions')
    op.drop_index('idx_questions_subcategory', table_name='questions')
    op.drop_index('idx_questions_difficulty', table_name='questions')
    op.drop_index('idx_questions_category', table_name='questions')
    op.create_index('ix_questions_session_id', 'questions', ['session_id'], unique=False)
    op.create_index('idx_questions_session_id', 'questions', ['session_id'], unique=False)
    op.alter_column('questions', 'category',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('questions', 'updated_at')
    op.drop_column('questions', 'generation_prompt_hash')
    op.drop_column('questions', 'ai_service_used')
    op.drop_column('questions', 'success_rate')
    op.drop_column('questions', 'average_score')
    op.drop_column('questions', 'usage_count')
    op.drop_column('questions', 'industry_tags')
    op.drop_column('questions', 'required_skills')
    op.drop_column('questions', 'compatible_roles')
    op.drop_column('questions', 'subcategory')
    op.drop_column('questions', 'question_metadata')
    op.drop_index(op.f('ix_session_questions_session_id'), table_name='session_questions')
    op.drop_index(op.f('ix_session_questions_question_id'), table_name='session_questions')
    op.drop_index('idx_session_questions_session_id', table_name='session_questions')
    op.drop_index('idx_session_questions_question_id', table_name='session_questions')
    op.drop_index('idx_session_questions_order', table_name='session_questions')
    op.drop_table('session_questions')
    # ### end Alembic commands ###
